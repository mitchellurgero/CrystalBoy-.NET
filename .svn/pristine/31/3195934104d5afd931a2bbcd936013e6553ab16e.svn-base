//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34003
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrystalBoy.Emulator.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CrystalBoy.Emulator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The plugin assembly &quot;{0}&quot; is not valid for your system.
        ///It will be removed from the plugin assembly list..
        /// </summary>
        internal static string AssemblyArchitectureErrorMessage {
            get {
                return ResourceManager.GetString("AssemblyArchitectureErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The plugin assembly &quot;{0}&quot; could not be loaded.
        ///It will be removed from the plugin assembly list.
        ///
        ///Details:
        ///{1}.
        /// </summary>
        internal static string AssemblyLoadErrorMessage {
            get {
                return ResourceManager.GetString("AssemblyLoadErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Plugin assembly loading error.
        /// </summary>
        internal static string AssemblyLoadErrorTitle {
            get {
                return ResourceManager.GetString("AssemblyLoadErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The plugin assembly &quot;{0}&quot; could not be found.
        ///It will be removed from the plugin assembly list..
        /// </summary>
        internal static string AssemblyNotFoundErrorMessage {
            get {
                return ResourceManager.GetString("AssemblyNotFoundErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} Bytes.
        /// </summary>
        internal static string ByteFormat {
            get {
                return ResourceManager.GetString("ByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The emulation must be reset for changing the emulated hardware.
        ///Do you agree to reset the emulation ?.
        /// </summary>
        internal static string EmulationResetMessage {
            get {
                return ResourceManager.GetString("EmulationResetMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error.
        /// </summary>
        internal static string ErrorTitle {
            get {
                return ResourceManager.GetString("ErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CrystalBoy.
        /// </summary>
        internal static string GenericMessageTitle {
            get {
                return ResourceManager.GetString("GenericMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0:N2} GB.
        /// </summary>
        internal static string GigaByteFormat {
            get {
                return ResourceManager.GetString("GigaByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0:N2} kB.
        /// </summary>
        internal static string KiloByteFormat {
            get {
                return ResourceManager.GetString("KiloByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0:N2} MB.
        /// </summary>
        internal static string MegaByteFormat {
            get {
                return ResourceManager.GetString("MegaByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No usable render method found..
        /// </summary>
        internal static string NoRenderMethodErrorMesage {
            get {
                return ResourceManager.GetString("NoRenderMethodErrorMesage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} Byte.
        /// </summary>
        internal static string OneByteFormat {
            get {
                return ResourceManager.GetString("OneByteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Paused.
        /// </summary>
        internal static string PausedText {
            get {
                return ResourceManager.GetString("PausedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Running.
        /// </summary>
        internal static string RunningText {
            get {
                return ResourceManager.GetString("RunningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Plugin loading error.
        /// </summary>
        internal static string TypeLoadingErrorTitle {
            get {
                return ResourceManager.GetString("TypeLoadingErrorTitle", resourceCulture);
            }
        }
    }
}
